#!/bin/bash

get_core_times () {
    echo "$proc_stat" | sed -n "s/^cpu$1\s//p"
}

get_idle_and_total() {
    for (( c=0; c<$n_cores; c++ )); do
        core_time=($(get_core_times $c))
        let "$1[$c]=core_time[3]+core_time[4]"
        for i in {0..9}; do
            let "$2[$c]=$2[$c]+core_time[$i]"
        done
    done
}

export LANG=C
n_cores=$(nproc)
core_times=()
total_start=()
total_end=()
idle_start=()
idle_end=()

proc_stat=$(grep cpu /proc/stat)
get_idle_and_total idle_start total_start

sleep 2

proc_stat=$(grep cpu /proc/stat)
get_idle_and_total idle_end total_end

for (( c=0; c<$n_cores; c++ )); do
    idle=$((${idle_end[$c]}-${idle_start[$c]}))
    total=$((${total_end[$c]}-${total_start[$c]}))
    color=""
    usage=`echo "scale=2; (1000*($total-$idle)/$total)/10" | bc`
    int_usage=$(printf "%.0f" $usage)
    if [ $int_usage -gt 50 ]; then
        color="yellow"
    fi
    if [ $int_usage -gt 80 ]; then
        color="red"
    fi
    [[ -z $color ]] && color="#3399ff"
    if [ $c -gt 0 ]; then echo -n " "; fi
    printf "<span color='$color'>C%d %06.2f%%</span>" $c $usage
done

echo

# vim: filetype=sh
