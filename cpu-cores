#!/bin/bash

get_core_times () {
    local core_number=$1
    echo "$proc_stat" | sed -n "s/^cpu$core_number\s//p"
}

export LANG=C
n_cores=$(nproc)
core_times=()
total_start=()
total_end=()
idle_start=()
idle_end=()

proc_stat=$(grep cpu /proc/stat)
for (( c=0; c<$n_cores; c++ )); do
    core_time=($(get_core_times $c))
    let "idle_start[$c]=core_time[3]+core_time[4]"
    for i in {0..9}; do
        let "total_start[$c]=total_start[$c]+core_time[$i]"
    done
done

sleep 2


proc_stat=$(grep cpu /proc/stat)

for (( c=0; c<$n_cores; c++ )); do
    core_time=($(get_core_times $c))
    let "idle_end[$c]=core_time[3]+core_time[4]"
    for i in {0..9}; do
        let "total_end[$c]=total_end[$c]+core_time[$i]"
    done
done

for (( c=0; c<$n_cores; c++ )); do
    let "DIFF_IDLE=idle_end[$c]-idle_start[$c]"
    let "DIFF_TOTAL=total_end[$c]-total_start[$c]"
    color=""
    DIFF_USAGE=`echo "scale=2; (1000*($DIFF_TOTAL-$DIFF_IDLE)/$DIFF_TOTAL)/10" | bc`
    int_usage=$(printf "%.0f" $DIFF_USAGE)
    if [ $int_usage -gt 50 ]; then
        color="yellow"
    fi
    if [ $int_usage -gt 80 ]; then
        color="red"
    fi
    [[ -z $color ]] && color="white"
    if [ $c -gt 0 ]; then echo -n " "; fi
    printf "<span color='$color'>CORE%d %06.2f%%</span>" $c $DIFF_USAGE

done

echo

